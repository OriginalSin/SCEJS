/**
* @class
* @constructor
*/
Mesh = function() {
	"use strict";
	
	/**
	* Load a triangle on node
	*/
	this.loadTriangle = function() {
		var obj = {};
		
		obj.vertexArray = [0.0, 1.0, 0.0, 1.0,
							1.0, 0.0, 0.0, 1.0,
							0.0, 0.0, 0.0, 1.0];	
		obj.normalArray = [0.0, 0.0, 1.0, 1.0,
		                    0.0, 0.0, 1.0, 1.0,
		                    0.0, 0.0, 1.0, 1.0];	
		obj.textureArray = [0.0, 0.0, 0.0, 1.0,
		                     1.0, 0.0, 0.0, 1.0,
		                     1.0, 1.0, 0.0, 1.0];
		obj.textureUnitArray = [0.0, 0.0, 0.0, 0.0];
		obj.indexArray = [0, 1, 2];
		
		return obj;
	};
	
	/**
	* Load a quad
	* @param {Float} length
	* @param {Float} height
	* @returns {Object}
	*/
	this.loadQuad = function(length, height) {
		var l=(length==undefined)?0.5:length;
		var h=(height==undefined)?0.5:height;
		
		var obj = {};
		obj.vertexArray = [-l, -h, 0.0, 1.0,// Front face
		                   l, -h, 0.0, 1.0,
		                   l, h, 0.0, 1.0,
		                   -l, h, 0.0, 1.0];	
		obj.normalArray = [	0.0, 0.0, 1.0, 1.0,// Front face
		                    0.0, 0.0, 1.0, 1.0,
		                    0.0, 0.0, 1.0, 1.0,
		                    0.0, 0.0, 1.0, 1.0];	
		obj.textureArray = [0.0, 0.0, 0.0, 1.0,// Front face
		                    1.0, 0.0, 0.0, 1.0,
		                    1.0, 1.0, 0.0, 1.0,
		                    0.0, 1.0, 0.0, 1.0];
		obj.textureUnitArray = [0.0,0.0,0.0,0.0];
		obj.indexArray = [0, 1, 2,	 	0, 2, 3];// Front face
		
		return obj;
	};
	
	/**
	* Load a box
	* @returns {Object}
	*/
	this.loadBox = function() {
		var obj = {};
		
		var d = new Float32Array([0.5,0.5,0.5]);
		obj.vertexArray = [-1.0*d[0], -1.0*d[1],  1.0*d[2], 1.0,// Front face
		                     1.0*d[0], -1.0*d[1],  1.0*d[2], 1.0,
		                     1.0*d[0],  1.0*d[1],  1.0*d[2], 1.0,
		                    -1.0*d[0],  1.0*d[1],  1.0*d[2], 1.0,
		                    // Back face
		                    -1.0*d[0], -1.0*d[1], -1.0*d[2], 1.0,
		                    -1.0*d[0],  1.0*d[1], -1.0*d[2], 1.0,
		                     1.0*d[0],  1.0*d[1], -1.0*d[2], 1.0,
		                     1.0*d[0], -1.0*d[1], -1.0*d[2], 1.0,
		                    // Top face
		                    -1.0*d[0],  1.0*d[1], -1.0*d[2], 1.0,
		                    -1.0*d[0],  1.0*d[1],  1.0*d[2], 1.0,
		                     1.0*d[0],  1.0*d[1],  1.0*d[2], 1.0,
		                     1.0*d[0],  1.0*d[1], -1.0*d[2], 1.0,
		                    // Bottom face
		                    -1.0*d[0], -1.0*d[1], -1.0*d[2], 1.0,
		                     1.0*d[0], -1.0*d[1], -1.0*d[2], 1.0,
		                     1.0*d[0], -1.0*d[1],  1.0*d[2], 1.0,
		                    -1.0*d[0], -1.0*d[1],  1.0*d[2], 1.0,
		                    // Right face
		                     1.0*d[0], -1.0*d[1], -1.0*d[2], 1.0,
		                     1.0*d[0],  1.0*d[1], -1.0*d[2], 1.0,
		                     1.0*d[0],  1.0*d[1],  1.0*d[2], 1.0,
		                     1.0*d[0], -1.0*d[1],  1.0*d[2], 1.0,
		                    // Left face
		                    -1.0*d[0], -1.0*d[1], -1.0*d[2], 1.0,
		                    -1.0*d[0], -1.0*d[1],  1.0*d[2], 1.0,
		                    -1.0*d[0],  1.0*d[1],  1.0*d[2], 1.0,
		                    -1.0*d[0],  1.0*d[1], -1.0*d[2], 1.0];	
		obj.normalArray = [0.0,  0.0,  1.0, 1.0,// Front face
		                    0.0,  0.0,  1.0, 1.0,
		                    0.0,  0.0,  1.0, 1.0,
		                    0.0,  0.0,  1.0, 1.0,
		                   // Back face
		                    0.0,  0.0, -1.0, 1.0,
		                    0.0,  0.0, -1.0, 1.0,
		                    0.0,  0.0, -1.0, 1.0,
		                    0.0,  0.0, -1.0, 1.0,
		                   // Top face
		                    0.0,  1.0,  0.0, 1.0,
		                    0.0,  1.0,  0.0, 1.0,
		                    0.0,  1.0,  0.0, 1.0,
		                    0.0,  1.0,  0.0, 1.0,
		                   // Bottom face
		                    0.0, -1.0,  0.0, 1.0,
		                    0.0, -1.0,  0.0, 1.0,
		                    0.0, -1.0,  0.0, 1.0,
		                    0.0, -1.0,  0.0, 1.0,
		                   // Right face
		                    1.0,  0.0,  0.0, 1.0,
		                    1.0,  0.0,  0.0, 1.0,
		                    1.0,  0.0,  0.0, 1.0,
		                    1.0,  0.0,  0.0, 1.0,
		                   // Left face
		                   -1.0,  0.0,  0.0, 1.0,
		                   -1.0,  0.0,  0.0, 1.0,
		                   -1.0,  0.0,  0.0, 1.0,
		                   -1.0,  0.0,  0.0, 1.0];	
		obj.textureArray = [0.0, 0.0, 0.0, 1.0,// Front face
		                     1.0, 0.0, 0.0, 1.0,
		                     1.0, 1.0, 0.0, 1.0,
		                     0.0, 1.0, 0.0, 1.0,
		                     // Back face
		                     1.0, 0.0, 0.0, 1.0,
		                     1.0, 1.0, 0.0, 1.0,
		                     0.0, 1.0, 0.0, 1.0,
		                     0.0, 0.0, 0.0, 1.0,
		                     // Top face
		                     0.0, 1.0, 0.0, 1.0,
		                     0.0, 0.0, 0.0, 1.0,
		                     1.0, 0.0, 0.0, 1.0,
		                     1.0, 1.0, 0.0, 1.0,
		                     // Bottom face
		                     1.0, 1.0, 0.0, 1.0,
		                     0.0, 1.0, 0.0, 1.0,
		                     0.0, 0.0, 0.0, 1.0,
		                     1.0, 0.0, 0.0, 1.0,
		                     // Right face
		                     1.0, 0.0, 0.0, 1.0,
		                     1.0, 1.0, 0.0, 1.0,
		                     0.0, 1.0, 0.0, 1.0,
		                     0.0, 0.0, 0.0, 1.0,
		                     // Left face
		                     0.0, 0.0, 0.0, 1.0,
		                     1.0, 0.0, 0.0, 1.0,
		                     1.0, 1.0, 0.0, 1.0,
		                     0.0, 1.0, 0.0, 1.0];
		obj.textureUnitArray = [0.0,0.0,0.0,0.0,// Front face
								 // Back face
								 0.0,0.0,0.0,0.0,
								 // Top face
								 0.0,0.0,0.0,0.0,
								 // Bottom face
								 0.0,0.0,0.0,0.0,
								 // Right face
								 0.0,0.0,0.0,0.0,
								 // Left face
								 0.0,0.0,0.0,0.0];
		obj.indexArray = [0, 1, 2,      0, 2, 3,    // Front face
		                   4, 5, 6,      4, 6, 7,    // Back face
		                   8, 9, 10,     8, 10, 11,  // Top face
		                   12, 13, 14,   12, 14, 15, // Bottom face
		                   16, 17, 18,   16, 18, 19, // Right face
		                   20, 21, 22,   20, 22, 23];  // Left face
		
		return obj;
	};
};